"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from decouple import config
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

# ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=lambda v: [s.strip() for s in v.split(',')])


# Application definition

INSTALLED_APPS = [
    # libraries
    'jet.dashboard',
    'jet',
    "bootstrap4",
    'pagedown',
    'markdown_deux',
    
    'crispy_forms',
    'mdeditor',
    # my apps
    'accounts',
    'posts',
    'comments',
    'about',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social_django',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.github.GithubOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.facebook.FacebookOAuth2',
    'accounts.backends.EmailBackend',

    
)
CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        # 'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'about.context_processors.newsletter_singup',
                'about.context_processors.category_list',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'

# TEMPLATES_CONTEXT_PROCESSORS = (
#     'django.core.context_processors.request',
# )
# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'ar'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    '/var/www/static/'
]

# STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")



LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/login/'

LOGOUT_URL = '/logout'

#  markdown

PAGEDOWN_IMAGE_UPLOAD_ENABLED = True

LANGUAGES = (
    ('ar', _('Arabic')),
    ('en', _('English')),
)

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)
ALLOW_UNICODE_SLUGS = True


# PARLER_LANGUAGES = {
#         None: (
#             {'code': 'ar'},
#             {'code': 'en'},
#         ),
#         'default': {
#             'fallback': ['ar'],
#             'hide_untranslated':False,
#         }
        
# }



# SOCIAL_AUTH_REDIRECT_IS_HTTPS = True
SOCIAL_AUTH_GITHUB_KEY = config('SOCIAL_AUTH_GITHUB_KEY')
SOCIAL_AUTH_GITHUB_SECRET = config('SOCIAL_AUTH_GITHUB_SECRET')


SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET')


# ACCOUNT_DEFAULT_HTTP_PROTOCOL='https'





SOCIAL_AUTH_FACEBOOK_KEY = config('SOCIAL_AUTH_FACEBOOK_KEY')
SOCIAL_AUTH_FACEBOOK_SECRET = config('SOCIAL_AUTH_FACEBOOK_SECRET')



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL')


# jet theme
# JET_DEFAULT_THEME = "green"
JET_THEMES = [
    {
        'theme': 'default',
        'color': '#47bac1',
        'title' :'Default'
    },
    {
        'theme': 'green',
        'color': '#44b78b',
        'title' :'Green'
    },
    {
        'theme': 'light-green',
        'color': '#2faa60',
        'title' :'Light Green'
    },
    {
        'theme': 'light-blue',
        'color': '#47bac1',
        'title' :'Light Blue'
    },
    {
        'theme': 'light-gray',
        'color': '#47bac1',
        'title' :'Light Gray'
    },
    {
        'theme': 'light-violet',
        'color': '#47bac1',
        'title' :'Light Violet'
    },
    # {
    #     'theme': 'pink',
    #     'color': 'pink',
    #     'title' :'Pink'
    # },
]

JET_SIDE_MENU_COMPACT = True

X_FRAME_OPTIONS = 'SAMEORIGIN'



MDEDITOR_CONFIGS = {
    'default':{
        'width': '100% ',  # Custom edit box width
        'heigth': 500,  # Custom edit box height
        # 'toolbar': ["undo", "redo", "|",
                    # "bold", "del", "italic", "quote", "ucwords", "uppercase", "lowercase", "|",
        #             "h1", "h2", "h3", "h5", "h6", "|",
        #             "list-ul", "list-ol", "hr", "|",
        #             "link", "reference-link", "image", "code", "preformatted-text", "code-block", "table", "datetime"
        #             "emoji", "html-entities", "pagebreak", "goto-line", "|",
        #             "help", "info",
        #             "||", "preview", "watch", "fullscreen"],  # custom edit box toolbar 
        # 'upload_image_formats': ["jpg", "jpeg", "gif", "png", "bmp", "webp"],  # image upload format type
        # 'image_folder': 'editor',  # image save the folder name
        # 'theme': 'default',  # edit box theme, dark / default
        # 'preview_theme': 'default',  # Preview area theme, dark / default
        # 'editor_theme': 'default',  # edit area theme, pastel-on-dark / default
        # 'toolbar_autofixed': True,  # Whether the toolbar capitals
        # 'search_replace': True,  # Whether to open the search for replacement
        # 'emoji': True,  # whether to open the expression function
        # 'tex': True,  # whether to open the tex chart function
        # 'flow_chart': True,  # whether to open the flow chart function
        # 'sequence': True, # Whether to open the sequence diagram function
        # 'watch': True,  # Live preview
        # 'lineWrapping': False,  # lineWrapping
        # 'lineNumbers': False,  # lineNumbers
        'language': 'en',  # zh / en / es 
    }
    
}


